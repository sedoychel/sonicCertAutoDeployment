- name: TLS setup on local host
  hosts: localhost
  vars:
    certs_dir: "../certs"
    ca_key_password: "root4lab"
  tasks:
    - name: Create a folder for certificates on the local host
      file:
        path: "{{ certs_dir }}"
        state: directory
        mode: "0755"

    - name: Generate a private key for the CA
      community.crypto.openssl_privatekey:
        path: "{{ certs_dir }}/RootCA.key"
        passphrase: "{{ ca_key_password }}"
        type: RSA
        size: 4096

    - name: Generate Root CA CSR
      openssl_csr:
        path: "{{ certs_dir }}/RootCA.csr"
        privatekey_path: "{{ certs_dir }}/RootCA.key"
        privatekey_passphrase: "{{ ca_key_password }}"
        common_name: sonic.cisco.com
        organization_name: "Cisco Lab"
        basic_constraints:
          - CA:TRUE
        basic_constraints_critical: yes
        key_usage:
          - keyCertSign
          - digitalSignature
          - cRLSign

    - name: Generate Root CA certificate
      openssl_certificate:
        path: "{{ certs_dir }}/RootCA.crt"
        privatekey_path: "{{ certs_dir }}/RootCA.key"
        privatekey_passphrase: "{{ ca_key_password }}"
        csr_path: "{{ certs_dir }}/RootCA.csr"
        provider: selfsigned

- name: Generate private key and CSR for each node on the local host
  hosts: sonic
  vars:
    certs_dir: "../certs"
    ca_key_password: "root4lab"
  tasks:
    - name: Ensure the certificate directory exists
      file:
        path: "{{ certs_dir }}"
        state: directory
        mode: "0755"
      delegate_to: localhost

    - name: Generate private key on localhost
      openssl_privatekey:
        path: "{{ certs_dir }}/{{ inventory_hostname }}.{{ domain }}.key"
        size: 4096
        state: present
        mode: "0644"
      delegate_to: localhost

    - name: Generate CSR on localhost
      openssl_csr:
        path: "{{ certs_dir }}/{{ inventory_hostname }}.{{ domain }}.csr"
        privatekey_path: "{{ certs_dir }}/{{ inventory_hostname }}.{{ domain }}.key"
        organization_name: Cisco
        subjectAltName:
          - "DNS:{{ inventory_hostname }}.{{ domain }}"
          - "DNS:{{ inventory_hostname }}"
          - "DNS: hostname.com"
          - "IP:{{ hostvars[inventory_hostname].ansible_host }}"
        state: present
      delegate_to: localhost

    - name: Sign CSR with RootCA
      community.crypto.x509_certificate:
        path: "{{ certs_dir }}/{{ inventory_hostname }}.{{ domain }}.crt"
        csr_path: "{{ certs_dir }}/{{ inventory_hostname }}.{{ domain }}.csr"
        ownca_path: "{{ certs_dir }}/RootCA.crt"
        ownca_privatekey_path: "{{ certs_dir }}/RootCA.key"
        ownca_privatekey_passphrase: "{{ ca_key_password }}"
        provider: ownca
      delegate_to: localhost

    - name: Create a telemetry folder
      file:
        path: "/etc/sonic/telemetry"
        state: directory
        mode: "0755"

    - name: Copy RootCA.crt to the target node
      copy:
        src: "{{ certs_dir }}/RootCA.crt"
        dest: "/etc/sonic/telemetry/dsmsroot.cer"
        mode: "0644"
        force: yes

    - name: Copy keys to the target node
      copy:
        src: "{{ certs_dir }}/{{ inventory_hostname }}.{{ domain }}.key"
        dest: "/etc/sonic/telemetry/streamingtelemetryserver.key"
        mode: "0644"
        force: yes

    - name: crt to the target node
      copy:
        src: "{{ certs_dir }}/{{ inventory_hostname }}.{{ domain }}.crt"
        dest: "/etc/sonic/telemetry/streamingtelemetryserver.cer"
        mode: "0644"
        force: yes

    - name: Restart Docker gnmi container
      community.docker.docker_container:
        name: "gnmi"
        state: started
        restart: true
      ignore_errors: yes
      become: yes
